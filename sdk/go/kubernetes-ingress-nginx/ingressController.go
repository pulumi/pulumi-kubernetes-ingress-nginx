// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kubernetesingressnginx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-kubernetes-ingress-nginx/sdk/go/kubernetes-ingress-nginx/internal"
	corev1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/core/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer
type IngressController struct {
	pulumi.ResourceState

	// Detailed information about the status of the underlying Helm deployment.
	Status ReleaseStatusOutput `pulumi:"status"`
}

// NewIngressController registers a new resource with the given unique name, arguments, and options.
func NewIngressController(ctx *pulumi.Context,
	name string, args *IngressControllerArgs, opts ...pulumi.ResourceOption) (*IngressController, error) {
	if args == nil {
		args = &IngressControllerArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IngressController
	err := ctx.RegisterRemoteComponentResource("kubernetes-ingress-nginx:index:IngressController", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type ingressControllerArgs struct {
	Controller *Controller `pulumi:"controller"`
	// Default 404 backend.
	DefaultBackend *ControllerDefaultBackend `pulumi:"defaultBackend"`
	// A base64ed Diffie-Hellman parameter. This can be generated with: openssl dhparam 4096 2> /dev/null | base64 Ref: https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/ssl-dh-param.
	DhParam *string `pulumi:"dhParam"`
	// Overrides for generated resource names.
	FullnameOverride *string `pulumi:"fullnameOverride"`
	// HelmOptions is an escape hatch that lets the end user control any aspect of the Helm deployment. This exposes the entirety of the underlying Helm Release component args.
	HelmOptions *Release `pulumi:"helmOptions"`
	// Optional array of imagePullSecrets containing private registry credentials Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/.
	ImagePullSecrets []corev1.LocalObjectReference `pulumi:"imagePullSecrets"`
	// Overrides for generated resource names.
	NameOverride *string `pulumi:"nameOverride"`
	// If true, create & use Pod Security Policy resources https://kubernetes.io/docs/concepts/policy/pod-security-policy/
	PodSecurityPolicy *ControllerPodSecurityPolicy `pulumi:"podSecurityPolicy"`
	// Enable RBAC as per https://github.com/kubernetes/ingress-nginx/blob/main/docs/deploy/rbac.md and https://github.com/kubernetes/ingress-nginx/issues/266
	Rbac *ControllerRBAC `pulumi:"rbac"`
	// Rollback limit.
	RevisionHistoryLimit *int                      `pulumi:"revisionHistoryLimit"`
	ServiceAccount       *ControllerServiceAccount `pulumi:"serviceAccount"`
	// TCP service key:value pairs Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md.
	Tcp map[string]map[string]string `pulumi:"tcp"`
	// UDP service key:value pairs Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md.
	Udp map[string]map[string]string `pulumi:"udp"`
}

// The set of arguments for constructing a IngressController resource.
type IngressControllerArgs struct {
	Controller ControllerPtrInput
	// Default 404 backend.
	DefaultBackend ControllerDefaultBackendPtrInput
	// A base64ed Diffie-Hellman parameter. This can be generated with: openssl dhparam 4096 2> /dev/null | base64 Ref: https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/ssl-dh-param.
	DhParam pulumi.StringPtrInput
	// Overrides for generated resource names.
	FullnameOverride pulumi.StringPtrInput
	// HelmOptions is an escape hatch that lets the end user control any aspect of the Helm deployment. This exposes the entirety of the underlying Helm Release component args.
	HelmOptions *ReleaseArgs
	// Optional array of imagePullSecrets containing private registry credentials Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/.
	ImagePullSecrets corev1.LocalObjectReferenceArrayInput
	// Overrides for generated resource names.
	NameOverride pulumi.StringPtrInput
	// If true, create & use Pod Security Policy resources https://kubernetes.io/docs/concepts/policy/pod-security-policy/
	PodSecurityPolicy ControllerPodSecurityPolicyPtrInput
	// Enable RBAC as per https://github.com/kubernetes/ingress-nginx/blob/main/docs/deploy/rbac.md and https://github.com/kubernetes/ingress-nginx/issues/266
	Rbac ControllerRBACPtrInput
	// Rollback limit.
	RevisionHistoryLimit pulumi.IntPtrInput
	ServiceAccount       ControllerServiceAccountPtrInput
	// TCP service key:value pairs Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md.
	Tcp pulumi.StringMapMapInput
	// UDP service key:value pairs Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md.
	Udp pulumi.StringMapMapInput
}

func (IngressControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ingressControllerArgs)(nil)).Elem()
}

type IngressControllerInput interface {
	pulumi.Input

	ToIngressControllerOutput() IngressControllerOutput
	ToIngressControllerOutputWithContext(ctx context.Context) IngressControllerOutput
}

func (*IngressController) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressController)(nil)).Elem()
}

func (i *IngressController) ToIngressControllerOutput() IngressControllerOutput {
	return i.ToIngressControllerOutputWithContext(context.Background())
}

func (i *IngressController) ToIngressControllerOutputWithContext(ctx context.Context) IngressControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressControllerOutput)
}

// IngressControllerArrayInput is an input type that accepts IngressControllerArray and IngressControllerArrayOutput values.
// You can construct a concrete instance of `IngressControllerArrayInput` via:
//
//	IngressControllerArray{ IngressControllerArgs{...} }
type IngressControllerArrayInput interface {
	pulumi.Input

	ToIngressControllerArrayOutput() IngressControllerArrayOutput
	ToIngressControllerArrayOutputWithContext(context.Context) IngressControllerArrayOutput
}

type IngressControllerArray []IngressControllerInput

func (IngressControllerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IngressController)(nil)).Elem()
}

func (i IngressControllerArray) ToIngressControllerArrayOutput() IngressControllerArrayOutput {
	return i.ToIngressControllerArrayOutputWithContext(context.Background())
}

func (i IngressControllerArray) ToIngressControllerArrayOutputWithContext(ctx context.Context) IngressControllerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressControllerArrayOutput)
}

// IngressControllerMapInput is an input type that accepts IngressControllerMap and IngressControllerMapOutput values.
// You can construct a concrete instance of `IngressControllerMapInput` via:
//
//	IngressControllerMap{ "key": IngressControllerArgs{...} }
type IngressControllerMapInput interface {
	pulumi.Input

	ToIngressControllerMapOutput() IngressControllerMapOutput
	ToIngressControllerMapOutputWithContext(context.Context) IngressControllerMapOutput
}

type IngressControllerMap map[string]IngressControllerInput

func (IngressControllerMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IngressController)(nil)).Elem()
}

func (i IngressControllerMap) ToIngressControllerMapOutput() IngressControllerMapOutput {
	return i.ToIngressControllerMapOutputWithContext(context.Background())
}

func (i IngressControllerMap) ToIngressControllerMapOutputWithContext(ctx context.Context) IngressControllerMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressControllerMapOutput)
}

type IngressControllerOutput struct{ *pulumi.OutputState }

func (IngressControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressController)(nil)).Elem()
}

func (o IngressControllerOutput) ToIngressControllerOutput() IngressControllerOutput {
	return o
}

func (o IngressControllerOutput) ToIngressControllerOutputWithContext(ctx context.Context) IngressControllerOutput {
	return o
}

// Detailed information about the status of the underlying Helm deployment.
func (o IngressControllerOutput) Status() ReleaseStatusOutput {
	return o.ApplyT(func(v *IngressController) ReleaseStatusOutput { return v.Status }).(ReleaseStatusOutput)
}

type IngressControllerArrayOutput struct{ *pulumi.OutputState }

func (IngressControllerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IngressController)(nil)).Elem()
}

func (o IngressControllerArrayOutput) ToIngressControllerArrayOutput() IngressControllerArrayOutput {
	return o
}

func (o IngressControllerArrayOutput) ToIngressControllerArrayOutputWithContext(ctx context.Context) IngressControllerArrayOutput {
	return o
}

func (o IngressControllerArrayOutput) Index(i pulumi.IntInput) IngressControllerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IngressController {
		return vs[0].([]*IngressController)[vs[1].(int)]
	}).(IngressControllerOutput)
}

type IngressControllerMapOutput struct{ *pulumi.OutputState }

func (IngressControllerMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IngressController)(nil)).Elem()
}

func (o IngressControllerMapOutput) ToIngressControllerMapOutput() IngressControllerMapOutput {
	return o
}

func (o IngressControllerMapOutput) ToIngressControllerMapOutputWithContext(ctx context.Context) IngressControllerMapOutput {
	return o
}

func (o IngressControllerMapOutput) MapIndex(k pulumi.StringInput) IngressControllerOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IngressController {
		return vs[0].(map[string]*IngressController)[vs[1].(string)]
	}).(IngressControllerOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IngressControllerInput)(nil)).Elem(), &IngressController{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngressControllerArrayInput)(nil)).Elem(), IngressControllerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IngressControllerMapInput)(nil)).Elem(), IngressControllerMap{})
	pulumi.RegisterOutputType(IngressControllerOutput{})
	pulumi.RegisterOutputType(IngressControllerArrayOutput{})
	pulumi.RegisterOutputType(IngressControllerMapOutput{})
}
